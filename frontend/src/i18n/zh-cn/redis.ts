export default {
    redis: {
        standaloneInfo: '单机信息',
        clusterInfo: '集群信息',
        node: '节点',
        clusterIpTips: 'ip:port1@port2：port1指redis服务器与客户端通信的端口，port2则是集群内部节点间通信的端口',
        masterSlaveRelationTips: `如果节点是slave，并且已知master节点，则为master节点ID；否则为符号'-'`,
        configEpochTips: '节点的epoch值（如果该节点是从节点，则为其主节点的epoch值）。每当节点发生失败切换时，都会创建一个新的，独特的，递增的epoch。',
        keywordPlaceholder: 'host / 名称 / 编号',
        hostTips: `请输入host:port；sentinel模式为: mastername=sentinelhost:port，若集群或哨兵需设多个节点可使用','分割`,
        nodePassword: '节点密码',
        sentinelHostErr: 'sentinel模式host需为: mastername=sentinelhost:sentinelport模式',
        delimiter: '分隔符',
        keyMatchTips: 'match 支持*模糊key, 回车搜索',
        loadMore: '加载更多',
        addKey: '新增key',
        newTabOpen: '新tab打开',
        redisSelectErr: '请先选择redis',
        flushDbTips: '确定清空[{db}]库的所有key?',

        // info
        redisInfoTitle: 'Redis服务器信息',
        version: '版本',
        port: '端口',
        mode: '模式',
        os: '操作系统',
        uptimeDays: '运行天数',
        execPath: '可执行文件路径',
        confFile: '配置文件路径',
        clusterEnable: '是否启用集群模式',
        nodeCount: '节点总数',
        clientConn: '客户端连接',
        connectedNum: '已连接客户端数',
        blockedClientNum: '正在等待阻塞命令客户端数',
        sysCpu: '系统CPU',
        userCpu: '用户CPU',
        sysChildCpu: '后台系统CPU',
        userChildCpu: '后台用户CPU',
        keyCount: '键值统计',
        countInfo: '统计信息',
        totalCmdProcess: '总处理命令数',
        curQps: '当前qps',
        expiredKeys: '过期key的总数量',
        netInputBytes: '网络入口流量字节数',
        netOutputBytes: '网络出口流量字节数',
        persistence: '持久化',
        aofEnable: '是否启用aof',
        loadingPersistence: '是否正在载入持久化文件',
        availableMemory: '可用内存',
        usedMemory: '已用内存',

        renameTips: '点击重命名',
        ttlPlaceholder: '单位(秒),负数永久',
        ttlTips: '点击修改过期时间',
        settingSuccess: '设置成功',
        permanent: '永久',
        persistenceConfirm: '确定持久化该key?',

        addNewLine: '添加新行',
        filterPlaceholder: '关键词回车搜索',
        deleteConfirm: '确定删除?',
    },
};
